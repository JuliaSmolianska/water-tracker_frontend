{"version":3,"file":"static/js/533.3f7585f3.chunk.js","mappings":"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","sources":["components/ForgotPassword/ForgotPassword.styled.jsx","components/SignInForm/AuthForm/SignIn.styled.js","components/SignInForm/AuthForm/AuthForm.js","components/SignInForm/SignInForm.js","pages/SigninPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/theme';\nimport { ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport m1 from '../../images/Mobile/Mobile-Background-element-Sign-In-1x.png';\nimport m2 from '../../images/Mobile/Mobile-Background-element-Sign-In-2x.png';\nimport mb1 from '../../images/Mobile/Mobile-Bottle-Sign-In-1x.png';\nimport mb2 from '../../images/Mobile/Mobile-Bottle-Sign-In-2x.png';\nimport t1 from '../../images/Tablet/Tablet-Bottle-for-Sign-in-1x.png';\nimport t2 from '../../images/Tablet/Tablet-Bottle-for-Sign-in-2x.png';\nimport d1 from '../../images/Desktop/Desktop-Background-element-Main-Page-1x.png';\nimport d2 from '../../images/Desktop/Desktop-Background-element-Main-Page-1x.png';\nimport db1 from '../../images/Desktop/Desktop-Bottle-for-Sign-in-1x.png';\nimport db2 from '../../images/Desktop/Desktop-Bottle-for-Sign-in-2x.png';\n\nexport const Title = styled.h2`\n  margin-bottom: ${theme.spacing(8)};\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 1.23;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-size: 18px;\n  line-height: 1.33;\n  color: ${theme.colors.dark};\n  margin-bottom: ${theme.spacing(4)};\n`;\n\nexport const Input = styled.input`\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: 1px solid ${theme.colors.skyblue};\n  margin-bottom: ${theme.spacing(8)};\n  color: ${theme.colors.lightblue};\n  line-height: 1.25;\n  outline: none;\n  width: 100%;\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.skyblue};\n  }\n\n  &:focus {\n    caret-color: ${theme.colors.dark};\n    color: ${theme.colors.blue};\n    border-color: ${theme.colors.skyblue};\n  }\n\n  &:active {\n    color: ${theme.colors.blue};\n    border-color: ${theme.colors.skyblue};\n  }\n\n  &.error {\n    border-color: ${theme.colors.red};\n    color: ${theme.colors.red};\n  }\n`;\n\nexport const SendBtn = styled.button`\n  display: flex;\n  padding: 10px 30px;\n  margin-bottom: ${theme.spacing(8)};\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  background: ${theme.colors.blue};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n  color: ${theme.colors.white};\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n  border: 1px solid transparent;\n  cursor: pointer;\n  transition: box-shadow ${theme.transition};\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n\n  width: 100%;\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  margin-bottom: ${theme.spacing(8)};\n  color: ${theme.colors.red};\n`;\n\nexport const SignInLink = styled(Link)`\n  line-height: 1.25;\n  color: ${theme.colors.blue};\n  transition: color ${theme.transition};\n  &:hover {\n    color: ${theme.colors.orange};\n  }\n`;\n\nexport const AuthPagesWrapper = styled.div`\n  height: 115vh;\n  background: top center no-repeat url(${m1}),\n    top 400px center no-repeat url(${mb1});\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${m2}), url(${mb2});\n  }\n\n  @media screen and (min-width: 768px) {\n    background: top -70px center / cover no-repeat url(${t1});\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${t2});\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    background: top right -80px no-repeat url(${d1}), left -160px top no-repeat url(${db1});\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${d2}), url(${db2});\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { theme } from 'components/theme';\nimport { Link } from 'react-router-dom';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const SignInContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  margin-top: ${theme.spacing(12)};\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    margin-top: ${theme.spacing(20)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n    margin-top: ${theme.spacing(0)};\n    position: absolute;\n    top: 222px;\n    right: 211px;\n  }\n`;\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  margin-top: ${theme.spacing(12)};\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    margin-top: ${theme.spacing(20)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n    margin-top: ${theme.spacing(0)};\n    position: absolute;\n    top: 200px;\n    right: 211px;\n  }\n`;\n\n\nexport const TitleForm = styled.h2`\n  margin-bottom: ${theme.spacing(8)};\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 1.23;\n`;\n\nexport const AuthFormLabel = styled.label`\n  display: flex;\n  font-size: 18px;\n  line-height: 1.33;\n  color: ${theme.colors.dark};\n  margin-bottom: ${theme.spacing(4)};\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\nexport const EyeBtn = styled.button`\n  border: none;\n  background: none;\n  position: absolute;\n  top: 26px;\n  right: 10px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const AuthFormInput = styled(Field)`\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: 1px solid ${theme.colors.skyblue};\n  margin-bottom: ${theme.spacing(8)};\n  color: ${theme.colors.lightblue};\n  line-height: 1.25;\n  outline: none;\n  width: 280px;\n  &::placeholder {\n    color: ${theme.colors.skyblue};\n  }\n\n  &:focus {\n    caret-color: ${theme.colors.dark};\n    color: ${theme.colors.blue};\n    border-color: ${theme.colors.skyblue};\n  }\n\n  &:active {\n    color: ${theme.colors.blue};\n    border-color: ${theme.colors.skyblue};\n  }\n\n  &.error {\n    border-color: ${theme.colors.red};\n    color: ${theme.colors.red};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const AuthFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100%;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: ${theme.colors.blue};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n  color: ${theme.colors.white};\n  font-weight: 500;\n  line-height: 1.25;\n  border: 1px solid transparent;\n  transition: box-shadow ${theme.transition};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 30px;\n    font-size: 18px;\n    line-height: 1.33;\n    min-width: 336px;\n  }\n  @media screen and (min-width: 1440px) {\n    min-width: 384px;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  margin-bottom: ${theme.spacing(8)};\n  color: ${theme.colors.red};\n`;\n\nexport const SignLink = styled(Link)`\n  margin-top: ${theme.spacing(8)};\n  line-height: 1.25;\n  color: ${theme.colors.blue};\n  transition: color ${theme.transition};\n  &:hover {\n    color: ${theme.colors.orange};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  AuthFormLabel,\n  AuthFormButton,\n  AuthFormInput,\n  StyledErrorMessage,\n  EyeBtn,\n  InputWrapper,\n} from './SignIn.styled';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\nimport sprite from '../../../images/sprite.svg';\nimport toast from 'react-hot-toast';\nimport { Loader } from 'components/Loader';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must not exceed 64 characters')\n    .required('Password is required'),\n});\n\nexport const AuthForm = ({ emailLabel, passwordLabel, buttonLabel }) => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [emailWrong, setEmailWrong] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (emailWrong) {\n      toast.error('Email or password is wrong');\n      setEmailWrong(false);\n    }\n  }, [emailWrong]);\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async ({ email, password }) => {\n    try {\n      setIsLoading(true);\n      const data = await dispatch(loginThunk({ email, password }));\n\n      if (!!data.payload.token) {\n        navigate('/home');\n      }\n\n      if (data.payload.message === 'Request failed with status code 401') {\n        setEmailWrong(true);\n      }\n      if (data.payload.message === 'Network Error')\n        toast.error('Network error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => {\n        return (\n          <Form>\n            <div>\n              <AuthFormLabel htmlFor=\"email\">{emailLabel}</AuthFormLabel>\n              <AuthFormInput\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n                className={`special ${\n                  errors.email && touched.email ? 'error' : ''\n                }`}\n              />\n              <StyledErrorMessage name=\"email\" component=\"div\" />\n            </div>\n            <div>\n              <AuthFormLabel htmlFor=\"password\">{passwordLabel}</AuthFormLabel>\n              <InputWrapper>\n                <AuthFormInput\n                  type={showPassword ? 'text' : 'password'}\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  className={`special ${\n                    errors.password && touched.password ? 'error' : ''\n                  }`}\n                />\n                <EyeBtn onClick={() => handleTogglePassword()} type=\"button\">\n                  <svg width=\"16\" height=\"16\" stroke=\"#407BFF\" fill=\"none\">\n                    <use\n                      xlinkHref={\n                        showPassword\n                          ? `${sprite}#icon-eye`\n                          : `${sprite}#icon-eye-slash`\n                      }\n                    />\n                  </svg>\n                </EyeBtn>\n              </InputWrapper>\n              <StyledErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n            </div>\n            <AuthFormButton type=\"submit\">{buttonLabel}</AuthFormButton>\n            {isLoading && <Loader />}\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","import { AuthForm } from './AuthForm/AuthForm';\nimport { SignInContainer, SignLink, TitleForm } from './AuthForm/SignIn.styled';\n\nexport const SignInForm = () => {\n  return (\n    <SignInContainer>\n      <TitleForm>Sign In</TitleForm>\n      <AuthForm\n        emailLabel=\"Enter your email\"\n        passwordLabel=\"Enter your password\"\n        buttonLabel=\"Sign In\"\n      />\n      <SignLink to=\"/forgot-password\">Forgot your password?</SignLink>\n      <SignLink to=\"/signup\">Sign Up</SignLink>\n    </SignInContainer>\n  );\n};\n","import { AuthPagesWrapper } from 'components/ForgotPassword/ForgotPassword.styled';\nimport { SignInForm } from 'components/SignInForm/SignInForm';\n\nexport default function Signin() {\n  return (\n    <AuthPagesWrapper>\n      <SignInForm />\n    </AuthPagesWrapper>\n  );\n}\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","theme","Label","_templateObject2","Input","_templateObject3","SendBtn","_templateObject4","StyledErrorMessage","ErrorMessage","_templateObject5","SignInLink","Link","_templateObject6","AuthPagesWrapper","_templateObject7","mb1","m2","mb2","t1","t2","d1","db1","d2","db2","SignInContainer","SignUpContainer","TitleForm","AuthFormLabel","InputWrapper","EyeBtn","AuthFormInput","Field","AuthFormButton","_templateObject8","_templateObject9","SignLink","_templateObject10","validationSchema","Yup","email","required","password","min","max","AuthForm","_ref","emailLabel","passwordLabel","buttonLabel","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","emailWrong","setEmailWrong","_useState5","_useState6","isLoading","setIsLoading","useEffect","toast","navigate","useNavigate","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref2","data","_context","prev","next","loginThunk","sent","payload","token","message","finish","stop","_x","apply","arguments","_jsx","Formik","initialValues","onSubmit","children","_ref4","errors","touched","_jsxs","Form","htmlFor","type","id","name","placeholder","className","concat","component","onClick","prevState","width","height","stroke","fill","xlinkHref","sprite","Loader","SignInForm","to","Signin"],"sourceRoot":""}